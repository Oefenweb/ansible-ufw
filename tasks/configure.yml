# tasks file
---
- name: configure | create (local facts) directory
  file:
    path: "{{ ufw_etc_ansible_facts_file | dirname }}/"
    state: directory
    owner: root
    group: root
    mode: 0755
  tags:
    - ufw-configure-facts

- name: configure | update configuration file(s)
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - src: "{{ ufw_etc_default_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_default_file }}"
    - src: "{{ ufw_etc_ansible_facts_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_ansible_facts_file }}"
  register: _configuration
  tags:
    - ufw-configure-facts

- name: configure | reset
  ufw:
    state: reset
  when: >
    _configuration is changed
#    or _after_rules is changed
#    or _before_rules is changed
#    or _user_rules is changed
  tags:
    - ufw-configure-reset

- name: configure | default policy | incoming
  ufw:
    policy: "{{ ufw_default_incoming_policy }}"
    direction: incoming
  notify: reload ufw
  tags:
    - ufw-configure-default-policy
    - ufw-configure-default-policy-incoming

- name: configure | default policy | outgoing
  ufw:
    policy: "{{ ufw_default_outgoing_policy }}"
    direction: outgoing
  notify: reload ufw
  tags:
    - ufw-configure-default-policy
    - ufw-configure-default-policy-outgoing

- name: configure | rules
  ufw:
    rule: "{{ item.rule }}"
    interface: "{{ item.interface | default('') }}"
    direction: "{{ item.direction | default('in') }}"
    from_ip: "{{ item.from_ip | default('any') }}"
    to_ip: "{{ item.to_ip | default('any') }}"
    from_port: "{{ item.from_port | default('') }}"
    to_port: "{{ item.to_port | default('') }}"
    protocol: "{{ item.protocol | default('any') }}"
    route: "{{ item.route | default(omit) }}"
    log: "{{ item.log | default(false) }}"
    comment: "{{ item.comment | default(omit) }}"
  with_items: "{{ ufw_rules }}"
  notify: reload ufw
  tags:
    - ufw-configure-rules

- name: configure | logging
  ufw:
    logging: "{{ ufw_logging }}"
  notify: reload ufw
  tags:
    - ufw-configure-logging

- name: configure | rules | update after file(s)
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - src: "{{ ufw_etc_ufw_after6_rules_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_ufw_after6_rules_file }}"
    - src: "{{ ufw_etc_ufw_after_rules_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_ufw_after_rules_file }}"
  when: ufw_etc_ufw_after_manage | bool
  register: _after_rules
  notify: reload ufw
  tags:
    - ufw-configure-rules
    - ufw-configure-rules-after

- name: configure | rules | update before file(s)
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - src: "{{ ufw_etc_ufw_before6_rules_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_ufw_before6_rules_file }}"
    - src: "{{ ufw_etc_ufw_before_rules_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_ufw_before_rules_file }}"
  when: ufw_etc_ufw_before_manage | bool
  register: _before_rules
  notify: reload ufw
  tags:
    - ufw-configure-rules
    - ufw-configure-rules-before

- name: configure | rules | update user file(s)
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0640
  with_items:
    - src: "{{ ufw_etc_ufw_user6_rules_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_ufw_user6_rules_file }}"
    - src: "{{ ufw_etc_ufw_user_rules_file.lstrip('/') }}.j2"
      dest: "{{ ufw_etc_ufw_user_rules_file }}"
  when: ufw_etc_ufw_user_manage | bool
  register: _user_rules
  notify: reload ufw
  tags:
    - ufw-configure-rules
    - ufw-configure-rules-user
